//Following code is implementation of inorder ,preorder,postorder 
#include<iostream>
#include<queue>
using namespace std;
struct node {
    int data;
    node* left;
    node* right;
};
node* get_new_node(int a){
    node* temp = new node;
    temp->data=a;
    temp->left=NULL;
    temp->right=NULL;
    return temp;
}
node* insert(node* root,int a){
    
    if(root==NULL){
        root=get_new_node(a);
    }
    else if(a<=root->data){
        root->left= insert(root->left,a);
    }
    else{
        root->right=insert(root->right,a);
    }
    return root;
}
void preorder(node* root){
    if(root==NULL){
        return ;
    }
    cout<<root->data<<" ";
    preorder(root->left);
    preorder(root->right);
}
void inorder(node* root){
    if(root==NULL){
        return ;
    }
    inorder(root->left);
    cout<<root->data<<" ";
    inorder(root->right);
}

void postorder(node* root){
    if(root==NULL){
        return;
    }
    postorder(root->left);
    postorder(root->right);
    cout<<root->data<<" ";
    
}
int main(){
    node* root = NULL;
    root=insert(root,4);
    root=insert(root,5);
    root=insert(root,2);
    root=insert(root,1);
    root=insert(root,3);
    root=insert(root,7);
    root=insert(root,16);
    preorder(root);
    cout<<endl;
    inorder(root);
    cout<<endl;
    postorder(root);
    cout<<endl;
    
    
    return 0;
}
